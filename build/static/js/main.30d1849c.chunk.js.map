{"version":3,"sources":["components/Footer/index.js","lib/aboutPage.js","components/Link/index.js","components/Button/index.js","lib/serverBase.js","lib/fetchFromServer.js","components/DataLastUpdated/index.js","components/Modal/index.js","components/AnimatedNumber/index.js","components/ScreenHeightStyleContainer/index.js","lib/logoHTML.js","lib/smoothScroll.js","App.js","reportWebVitals.js","index.js"],"names":["Footer","useState","aboutModalOpen","setAboutModalOpen","className","DataLastUpdated","Link","href","button","onClick","map","e","i","Modal","closeModal","props","pr","clName","children","target","rel","Button","loading","disabled","serverBase","route","a","fetch","Math","floor","random","response","json","fetchFromServer","dataLastUpdated","setDataLastUpdated","useEffect","lastUpdated","dayjs","fromNow","extend","relativeTime","otherProps","closing","setClosing","modalElm","useRef","close","setTimeout","ref","current","aria-label","AnimatedNumber","state","currentFrame","updateNumberInterval","undefined","bind","this","clearInterval","setState","setInterval","animationTimeMS","currentNumber","number","commaNumber","Component","ScreenHeightStyleContainer","screenHeight","updateScreenHeight","window","innerHeight","addEventListener","removeEventListener","style","logoHTML","validScrollTypes","smoothScroll","elm","type","indexOf","Error","scrollTop","scrollLeft","end","scrollHeight","scrollWidth","addPerFrame","scrollInterval","scrollTo","top","left","HIGHSCORE_PARAM","statusColors","play","gameover","correct","statusTextColors","getProxyURL","url","md5","App","playLoading","setPlayLoading","playing","setPlaying","playedBefore","setPlayedBefore","score","setScore","highScore","setHighScore","accounts","setAccounts","gameStatus","setGameStatus","transitioning","setTransitioning","overlayEnabled","setOverlayEnabled","overlayOpaque","setOverlayOpaque","scrollingGameElm","updateHighScore","parseInt","localStorage","getItem","loadAccount","length","id","newAccount","showAnswer","initializeAccounts","firstAccount","secondAccount","nextGame","status","slice","newScore","setItem","innerWidth","collageBackgroundStyle","backgroundImage","backgroundSize","backgroundPosition","dangerouslySetInnerHTML","__html","lineHeight","marginTop","postImageURLs","im","imkey","src","alt","username","onError","evt","placeholderSrc","newSrc","seedrandom","pictureURL","width","name","followers","newStatus","zIndex","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30d1849c.chunk.js","sourcesContent":["import ReactMarkdown from 'react-markdown';\nimport aboutPageText from '../../lib/aboutPage';\nimport React, { useState } from 'react';\nimport { DataLastUpdated, Link, Modal } from '../';\n\nexport default function Footer() {\n  const [aboutModalOpen, setAboutModalOpen] = useState(false);\n  return (\n    <>\n      <footer className='flex-initial w-full py-3 px-4 text-gray-400 text-sm flex'>\n        <p className='float-left capitalize flex-auto flex-col justify-end hidden md:flex'>\n          <DataLastUpdated />\n        </p>\n        <p className='float-right flex flex-col text-left md:text-right lg:flex-row flex-initial'>\n          {[\n            <span className='flex md:hidden capitalize'>\n              <DataLastUpdated />\n            </span>,\n            <>\n              Developed By <Link href='https://gabrielromualdo.com/'>Gabriel Romualdo</Link>\n            </>,\n            <>\n              Inspired By <Link href='http://www.higherlowergame.com/'>The Higher Lower Game</Link>\n            </>,\n            <>\n              Read{' '}\n              <Link button onClick={() => setAboutModalOpen(true)}>\n                About This Game\n              </Link>\n            </>,\n          ].map((e, i) => (\n            <span key={i} className='mt-2 lg:mt-0 lg:ml-3'>\n              {e}\n            </span>\n          ))}\n        </p>\n      </footer>\n\n      {aboutModalOpen ? (\n        <Modal\n          closeModal={() => {\n            setAboutModalOpen(false);\n          }}\n        >\n          <article className='prose mx-auto invert about-section'>\n            <ReactMarkdown>{aboutPageText}</ReactMarkdown>\n          </article>\n        </Modal>\n      ) : null}\n    </>\n  );\n}\n","const aboutPageText = `\n# About\n\nMore Or Less Followers is a game to guess which accounts have more or less Instagram followers. Data is updated periodically from a wide array of top Instagram accounts, and games are randomly selected from those accounts.\n\nWe do not own any of the photos, posts, or other relevant information from Instagram.\n\n### Code & Technologies\n\nMore Or Less Followers uses:\n\n - React.js on the frontend with Tailwind.css\n - PHP on the backend with data stored as JSON\n - A Python data fetching system to get and update Instagram data\n\nThis was my first time using Tailwind.css and fetching data from Instagram using the Instaloader package. These two tools were definitely interesting to expose myself to and get familiar with while developing this game.\n\nIf you'd like to take a look at the code, see [the GitHub repository for the frontend](https://github.com/xtrp/moreorlessfollowers-frontend). Other relevant repositories with backend and server code are linked there.\n\n### License & Credits\n\nMore Or Less Followers is built by [Gabriel Romualdo](https://gabrielromualdo.com). It is inspired by [The Higher Lower Game](http://www.higherlowergame.com/). Most of the code is licensed under the MIT License. See the GitHub repositories for more information.\n`;\nexport default aboutPageText;\n","import React from 'react';\n\nexport default function Link(props) {\n  const { button, ...pr } = props;\n  const clName = `${pr.className} cursor-pointer font-semibold transition-all border-b border-solid border-current hover:text-white focus:text-white focus:outline-none`;\n  if (button) {\n    return (\n      <button {...pr} className={clName}>\n        {pr.children}\n      </button>\n    );\n  } else {\n    return (\n      <a {...pr} className={clName} target={pr.target || '_blank'} rel={pr.rel || 'noreferrer noopener'}>\n        {pr.children}\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nexport default function Button(props) {\n  const { loading, ...pr } = props;\n  return (\n    <button\n      {...pr}\n      className={`${pr.className} ${\n        loading ? 'text-transparent relative' : ''\n      } font-medium text-lg w-48 py-2 px-4 rounded-md border-2 border-white transition-all hover:text-gray-800 hover:bg-white duration-300 focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-gray-800 focus:outline-none disabled:bg-white disabled:opacity-70 disabled:pointer-events-none`}\n      {...(loading ? { disabled: true } : {})}\n    >\n      {pr.children}\n      {loading ? (\n        <div className='absolute inset-1/2 transform -translate-x-1/2 -translate-y-1/2 h-6 w-6'>\n          <div className='h-full w-full border-2 border-gray-300 rounded-full loader animate-spin'></div>\n        </div>\n      ) : null}\n    </button>\n  );\n}\n","const serverBase = 'https://api.moreorlessfollowers.com';\nexport default serverBase;\n","import serverBase from './serverBase';\nasync function fetchFromServer(route) {\n  const response = await fetch(`${serverBase}${route}?nocache=${Math.floor(Math.random() * 1000000000)}`); // add query param to remove caching of routes\n  const json = await response.json();\n  return json;\n}\nexport default fetchFromServer;\n","import React, { useState, useEffect } from 'react';\nimport fetchFromServer from '../../lib/fetchFromServer';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\ndayjs.extend(relativeTime);\n\nexport default function DataLastUpdated() {\n  const [dataLastUpdated, setDataLastUpdated] = useState(false);\n  useEffect(() => {\n    (async () => {\n      setDataLastUpdated((await fetchFromServer('/get-data-last-updated.php')).lastUpdated);\n    })();\n  }, []);\n  return <>{dataLastUpdated ? `Instagram data updated ${dayjs(dataLastUpdated).fromNow()}` : ''}</>;\n}\n","import React, { useState, useRef } from 'react';\nimport { XCircleIcon } from '@heroicons/react/solid';\nimport './styles.css';\n\nexport default function Modal(props) {\n  const { children, closeModal, ...otherProps } = props;\n  const [closing, setClosing] = useState(false);\n  const modalElm = useRef(null);\n  const close = () => {\n    setClosing(true);\n    setTimeout(() => {\n      closeModal();\n    }, 250);\n  };\n  return (\n    <>\n      <style>{`body{overflow:hidden;}`}</style>\n      <div\n        {...otherProps}\n        ref={modalElm}\n        className={`modal-component ${props.className} ${closing ? 'closing' : ''}`}\n        onClick={(e) => {\n          if (e.target === modalElm.current) {\n            close();\n          }\n        }}\n      >\n        <div className='inner bg-gray-800 w-full md:w-3/5 shadow-xl rounded-lg'>\n          <button\n            className='rounded-full close focus:outline-none mt-3 mb-3 opacity-70 hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-1 focus:ring-offset-gray-800'\n            aria-label='Close Modal'\n            onClick={() => close()}\n          >\n            <XCircleIcon className='text-white h-8 w-8' />\n          </button>\n          {children}\n        </div>\n      </div>\n    </>\n  );\n}\n","import React, { Component } from 'react';\nimport commaNumber from 'comma-number';\n\nconst frames = 100;\nconst animationTimeMS = 400;\n\nexport default class AnimatedNumber extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentFrame: 0,\n      updateNumberInterval: undefined,\n    };\n    this.updateNumberInterval = this.updateNumberInterval.bind(this);\n  }\n  updateNumberInterval() {\n    if (this.state.currentFrame === frames) {\n      clearInterval(this.state.updateNumberInterval);\n    } else {\n      this.setState({ currentFrame: this.state.currentFrame + 1 });\n    }\n  }\n  componentDidMount() {\n    this.setState({ updateNumberInterval: setInterval(this.updateNumberInterval, animationTimeMS / frames) });\n  }\n  render() {\n    const increasePerFrame = (this.props.number || 0) / frames; // default number is 0 if provided number prop is bad\n    let currentNumber = increasePerFrame * this.state.currentFrame;\n    return <>{commaNumber(Math.floor(currentNumber))}</>;\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class ScreenHeightStyleContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      screenHeight: '100vh',\n    };\n    this.updateScreenHeight = this.updateScreenHeight.bind(this);\n  }\n  updateScreenHeight() {\n    this.setState({ screenHeight: `${window.innerHeight}px` });\n  }\n  componentDidMount() {\n    this.updateScreenHeight();\n    window.addEventListener('resize', this.updateScreenHeight);\n  }\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateScreenHeight);\n  }\n  render() {\n    return <div style={{ '--screen-height': this.state.screenHeight }}>{this.props.children}</div>;\n  }\n}\n","const logoHTML = `<svg id=\"b9c6752e-3fcf-4c62-9b7f-d0104f13cd51\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 827 334.27\"><text transform=\"translate(2.32 298.46)\" font-size=\"132\" fill=\"#9ca3af\" font-family=\"Inter-Bold, Inter\" font-weight=\"700\">FOL<tspan x=\"255.32\" y=\"0\" letter-spacing=\"-0.03em\">L</tspan><tspan x=\"326.48\" y=\"0\">OWERS</tspan></text><text transform=\"translate(2.27 130.1)\" font-size=\"132\" fill=\"#10b981\" font-family=\"Inter-Bold, Inter\" font-weight=\"700\">MORE</text><text transform=\"translate(493.18 130.1)\" font-size=\"132\" fill=\"#ef4444\" font-family=\"Inter-Bold, Inter\" font-weight=\"700\">LESS</text><line x1=\"469\" y1=\"2.46\" x2=\"417\" y2=\"163.46\" fill=\"none\" stroke=\"#9ca3af\" stroke-miterlimit=\"10\" stroke-width=\"16\"/></svg>`;\nexport default logoHTML;\n","const validScrollTypes = ['vertical', 'horizontal'];\nconst FPS = 40;\nconst animationLengthS = 1;\n\nconst smoothScroll = (elm, type) => {\n  if (validScrollTypes.indexOf(type) === -1) {\n    throw new Error('Invalid scroll type ' + type);\n  }\n\n  let current = type === 'vertical' ? elm.scrollTop : elm.scrollLeft;\n  const end = type === 'vertical' ? elm.scrollHeight : elm.scrollWidth;\n  const addPerFrame = (end - current) / (animationLengthS * FPS);\n\n  let scrollInterval = setInterval(() => {\n    if (current >= end) {\n      clearInterval(scrollInterval);\n    } else {\n      current += addPerFrame;\n      if (type === 'vertical') {\n        elm.scrollTo({ top: current, left: 0 });\n      } else {\n        elm.scrollTo({ top: 0, left: current });\n      }\n    }\n  }, 1000 / FPS);\n};\n\nexport default smoothScroll;\n","import { ArrowNarrowRightIcon, PlusCircleIcon, MinusCircleIcon, XIcon, CheckIcon } from '@heroicons/react/solid';\nimport { useEffect, useState, useRef } from 'react';\nimport { AnimatedNumber, Button, Footer, ScreenHeightStyleContainer } from './components/';\nimport fetchFromServer from './lib/fetchFromServer';\nimport logoHTML from './lib/logoHTML';\nimport smoothScroll from './lib/smoothScroll';\nimport './lib/main.css';\nimport serverBase from './lib/serverBase';\nimport md5 from 'md5';\nimport seedrandom from 'seedrandom';\n\nconst HIGHSCORE_PARAM = 'highscore';\n\nconst statusColors = {\n  play: 'bg-white',\n  gameover: 'bg-red-500',\n  correct: 'bg-green-500',\n};\nconst statusTextColors = {\n  play: 'text-gray-800',\n  gameover: 'text-white',\n  correct: 'text-white',\n};\n\nconst getProxyURL = (url) => `${serverBase}/images/${md5(url)}.jpg`;\n\nfunction App() {\n  const [playLoading, setPlayLoading] = useState(false);\n  const [playing, setPlaying] = useState(false);\n  const [playedBefore, setPlayedBefore] = useState(false);\n\n  const [score, setScore] = useState(0);\n  const [highScore, setHighScore] = useState(0);\n\n  const [accounts, setAccounts] = useState([]);\n  const [gameStatus, setGameStatus] = useState('play');\n  const [transitioning, setTransitioning] = useState(false);\n\n  const [overlayEnabled, setOverlayEnabled] = useState(false);\n  const [overlayOpaque, setOverlayOpaque] = useState(false);\n\n  const scrollingGameElm = useRef(null);\n\n  const updateHighScore = () => setHighScore(parseInt(localStorage.getItem(HIGHSCORE_PARAM)) || 0);\n  useEffect(() => updateHighScore(), []);\n\n  const loadAccount = async () => {\n    const newAccount = await fetchFromServer('/get-random-account.php?excluded-ids=' + accounts[accounts.length - 1].id);\n    setAccounts([\n      ...accounts.map((e) => {\n        return { ...e, showAnswer: true };\n      }),\n      { ...newAccount, showAnswer: false },\n    ]);\n  };\n  const initializeAccounts = async () => {\n    const firstAccount = await fetchFromServer('/get-random-account.php');\n    const secondAccount = await fetchFromServer('/get-random-account.php?excluded-ids=' + firstAccount.id);\n    setAccounts([\n      { ...firstAccount, showAnswer: true },\n      { ...secondAccount, showAnswer: false },\n    ]);\n  };\n\n  const nextGame = (status) => {\n    setAccounts([...accounts.slice(0, accounts.length - 1), { ...accounts[accounts.length - 1], showAnswer: true }]);\n    setTimeout(() => {\n      setGameStatus(status);\n    }, 500);\n    setTimeout(async () => {\n      if (status === 'gameover') {\n        setOverlayEnabled(true);\n        setTimeout(() => {\n          setOverlayOpaque(true);\n        }, 300);\n        setTimeout(() => {\n          setGameStatus('play');\n          setAccounts([]);\n          setScore(0);\n          setPlaying(false);\n          setPlayedBefore(true);\n          setOverlayEnabled(false);\n          setOverlayOpaque(false);\n        }, 550);\n      } else {\n        await loadAccount();\n        const newScore = score + 1;\n        if (newScore > highScore) {\n          localStorage.setItem(HIGHSCORE_PARAM, newScore);\n          updateHighScore();\n        }\n        setScore(newScore);\n        setTransitioning(true);\n        if (window.innerWidth < 768) {\n          // less than responsive medium (md) on tailwind, scroll column\n          smoothScroll(scrollingGameElm.current, 'vertical');\n        } else {\n          smoothScroll(scrollingGameElm.current, 'horizontal');\n        }\n        setTimeout(() => {\n          setGameStatus('play');\n          setTransitioning(false);\n        }, 600);\n      }\n    }, 900);\n  };\n\n  const collageBackgroundStyle = {\n    backgroundImage: `\n    linear-gradient( rgba(31, 41, 55, .95), rgba(31, 41, 55, .95) ),\n    url(${serverBase}/get-collage-img.php)\n    `,\n    backgroundSize: `cover, 30rem auto`,\n    backgroundPosition: `center, center`,\n  };\n\n  return (\n    <ScreenHeightStyleContainer>\n      <div className='text-white font-sans w-full flex my-min-h-screen flex-col items-center antialiased' style={collageBackgroundStyle}>\n        <header className='fixed pt-2 px-2 inset-0 h-10 z-50'>\n          {playing ? <p className='float-left rounded bg-gray-400 py-1 px-3 font-medium shadow-md'>Score: {score}</p> : null}\n          <p className='float-right rounded bg-gradient-to-br from-green-400 to-blue-500 py-1 px-3 font-medium shadow-md'>\n            Your High Score: {highScore}\n          </p>\n        </header>\n\n        {playing ? (\n          <main className='w-full my-h-screen overflow-hidden md:whitespace-nowrap' ref={scrollingGameElm}>\n            <a\n              className='hidden md:block fixed bottom-0 right-0 w-32 py-2 px-3 z-50 opacity-70 hover:opacity-100 transition-all'\n              dangerouslySetInnerHTML={{\n                __html: logoHTML,\n              }}\n              href='./'\n            ></a>\n            <div\n              className={`transition-all transition duration-300 ${\n                transitioning ? 'opacity-0' : ''\n              } absolute left-0 md:left-1/2 top-1/2 md:top-0 h-16 md:h-full z-20 transform -translate-y-1/2 md:-translate-x-1/2 md:translate-y-0 flex flex-row md:flex-col justify-center w-full md:w-16`}\n            >\n              <div\n                className={`z-auto absolute left-0 md:left-1/2 top-1/2 md:top-0 h-1 md:h-full z-20 transform -translate-y-1/2 md:translate-y-0 md:-translate-x-1/2 w-full md:w-1 ${statusColors[gameStatus]}`}\n              ></div>\n              <div\n                className={`transform scale-90 md:scale-100 z-10 w-16 h-16 rounded-md ${statusColors[gameStatus]} shadow ${statusTextColors[gameStatus]} text-2xl text-center uppercase font-bold`}\n                style={{ lineHeight: `${16 * 0.25}rem` }}\n              >\n                {(() => {\n                  if (gameStatus === 'play') {\n                    return 'or';\n                  } else if (gameStatus === 'gameover') {\n                    return <XIcon className='w-12 h-12' style={{ marginTop: '-.1rem' }} />;\n                  } else if (gameStatus === 'correct') {\n                    return <CheckIcon className='w-12 h-12' />;\n                  }\n                })()}\n              </div>\n            </div>\n            {accounts.map((e, i) => {\n              return (\n                <div\n                  className='w-full my-h-screen-1/2 md:w-1/2 md:my-h-screen relative align-top inline-flex flex-col justify-center items-center'\n                  key={i}\n                >\n                  <div className='absolute inset-0 h-full w-full z-0'>\n                    {e.postImageURLs.map((im, imkey) => (\n                      <div key={imkey} className='w-1/3 h-1/3 float-left relative bg-cover bg-center'>\n                        <img\n                          className='w-full h-full absolute inset object-cover object-center'\n                          src={getProxyURL(im)}\n                          alt={`A recent post from ${e.username} on Instagram`}\n                          onError={(evt) => {\n                            const placeholderSrc = '/post-placeholder.jpg';\n                            const newSrc = getProxyURL(e.postImageURLs[Math.floor(seedrandom(e.username)() * e.postImageURLs.length)]);\n                            if (evt.target.src !== newSrc) {\n                              evt.target.src = newSrc;\n                            } else if (evt.target.src !== placeholderSrc) {\n                              evt.target.src = placeholderSrc;\n                            } else {\n                              // none of the images are working\n                            }\n                          }}\n                        />\n                      </div>\n                    ))}\n                  </div>\n                  <div className='absolute inset-0 h-full w-full z-10 bg-black opacity-80'></div>5\n                  <div className='z-20 w-10/12 md:w-8/12 lg:w-96 p-1 md:p-4 rounded-md flex text-gray-900 shadow-lg bg-white'>\n                    <img\n                      className='h-16 w-16 rounded-md md:rounded-full flex-initial bg-cover bg-center'\n                      src={getProxyURL(e.pictureURL)}\n                      onError={(e) => {\n                        const placeholderSrc = '/picture-placeholder.jpg';\n                        if (e.target.src !== placeholderSrc) {\n                          e.target.src = placeholderSrc;\n                        }\n                      }}\n                      alt={`${e.username} on Instagram`}\n                      loading='lazy'\n                    />\n                    <div className='flex-initial flex flex-col justify-center ml-3' style={{ width: `calc(100% - ${19 * 0.25}rem)` }}>\n                      <h1 className='text-xl font-semibold w-full truncate'>{e.name}</h1>\n                      <p className='text-gray-500 w-full truncate'>\n                        {e.showAnswer /* allow for link to be clicked if answer is shown */ ? (\n                          <a href={`https://instagram.com/${e.username}`} target='_blank' rel='noopener noreferrer' className='hover:underline'>\n                            @{e.username}\n                          </a>\n                        ) : (\n                          <>@{e.username}</>\n                        )}\n                      </p>\n                    </div>\n                  </div>\n                  <h2 className='z-20 uppercase text-center w-full text-white font-bold text-lg md:text-xl tracking-wide mt-1 md:mt-4 opacity-60'>\n                    has\n                  </h2>\n                  <div className={`z-20 w-10/12 md:w-8/12 lg:w-96 ${e.showAnswer ? 'flex-row h-10' : 'py-1 lg:py-0'} flex items-center lg:h-20`}>\n                    {e.showAnswer ? (\n                      <h2 className='text-4xl lg:text-5xl text-center font-bold w-full'>\n                        <AnimatedNumber number={Math.floor(e.followers / 10000) * 10000} />\n                      </h2>\n                    ) : (\n                      <>\n                        <Button\n                          className='w-auto flex-auto pr-6 lg:pr-8'\n                          onClick={() => {\n                            const newStatus = e.followers >= accounts[i - 1].followers ? 'correct' : 'gameover';\n                            nextGame(newStatus);\n                          }}\n                        >\n                          <PlusCircleIcon className='mr-2 button-icon' />\n                          More\n                        </Button>\n                        <Button\n                          className='w-auto flex-auto ml-2 pr-6 lg:pr-8'\n                          onClick={() => {\n                            const newStatus = e.followers <= accounts[i - 1].followers ? 'correct' : 'gameover';\n                            nextGame(newStatus);\n                          }}\n                        >\n                          <MinusCircleIcon className='mr-2 button-icon' />\n                          Less\n                        </Button>\n                      </>\n                    )}\n                  </div>\n                  <h2 className='z-20 uppercase text-center w-full text-white font-bold text-lg md:text-xl tracking-wide mt-1 md:mt-2 opacity-60'>\n                    {e.showAnswer ? 'Instagram' : ''} followers\n                    {e.showAnswer ? '' : <> than @{accounts[i - 1].username}</>}\n                  </h2>\n                </div>\n              );\n            })}\n\n            {overlayEnabled ? (\n              <div\n                className={`fixed inset-0 w-full my-h-screen bg-gray-800 transition-all duration-300 ${overlayOpaque ? 'opacity-100' : 'opacity-0'}`}\n                style={{ ...collageBackgroundStyle, zIndex: 9999 }}\n              ></div>\n            ) : null}\n          </main>\n        ) : (\n          <>\n            <main className='w-96 max-w-full px-4 md:px-0 flex flex-col justify-center flex-1 text-center'>\n              <div\n                className='inline-block w-full'\n                dangerouslySetInnerHTML={{\n                  __html: logoHTML,\n                }}\n              ></div>\n              <p className='mt-4 mb-7 text-gray-300 text-lg mx-auto'>A game to guess which accounts have more or less Instagram followers!</p>\n              <Button\n                onClick={async () => {\n                  setPlayLoading(true);\n                  await initializeAccounts();\n                  setPlayLoading(false);\n                  setPlaying(true);\n                }}\n                loading={playLoading}\n                className='w-full sm:w-64 text-center mx-auto'\n              >\n                <>\n                  Play {playedBefore ? 'Again' : 'Now'} <ArrowNarrowRightIcon className='ml-1 button-icon pulse-right' />\n                </>\n              </Button>\n            </main>\n            <Footer />\n          </>\n        )}\n      </div>\n    </ScreenHeightStyleContainer>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('gabriel-enters-the-chat')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}